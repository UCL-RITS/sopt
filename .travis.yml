language: cpp
sudo: required
dist: trusty

# The apt packages below are needed but can no longer be installed with
# sudo apt-get.

      # - libcfitsio3-dev # version 3.34
      # - libccfits-dev # version 2.4
      # - libyaml-cpp-dev # version 0.5.1
      # libtiff is version 5 in Trusty

# env:
#     global:
#         - SETUP_CMD='test'
#         - TEST_CMD='py.test test_env.py'
#         - PYTHON_VERSION=3.6

#     matrix:
#         - SETUP_CMD='egg_info' TEST_CMD='python --version'

matrix:
  # Don't wait for allowed failures - do we really need this? TODO
  fast_finish: true

  include:
    - os: osx
      osx_image: xcode8
      env:
        - TITLE="Who knows - GCC"

    - os: osx
      osx_image: xcode8
      env:
        - TITLE="Who knows - Clang"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libfftw3-dev # version 3.3.3
            - libtiff5-dev # version 5 ?
            - libboost-all-dev # version 1.54
            - libeigen3-dev # version 3.2.0
            #- llvm # version 3.4

      env:
        - TITLE="All dependencies - GCC"
        - DEBUG=True
        - LDFLAGS='-pthread'

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libfftw3-dev # version 3.3.3
            - libtiff5-dev # version 5 ?
            - libboost-all-dev # version 1.54
            - libeigen3-dev # version 3.2.0
            #- llvm # version 3.4

      env:
        - TITLE="All dependencies - Clang"
        - DEBUG=True
        - LDFLAGS='-pthread'

    # - os: linux # no dependencies installed
  #   - os: linux #Documentation? To push to gh-pages
  #     env: PYTHON_VERSION=3.4 PYTEST_VERSION=3.1 PIP_FALLBACK=false
      
  # allow_failures:
  #   - os: linux #Benchmark
  #     env: PYTHON_VERSION=3.4 PYTEST_VERSION=3.1 PIP_FALLBACK=false

before_install:
  - echo "Travis Run!"
  - if [ $TRAVIS_OS_NAME = osx ]; then brew update; brew install gcc; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then ClangVer="-5.0"; fi
  - if [[ ${TITLE} = *GCC* ]]; then CC=gcc-7; else CC=clang${ClangVer}; fi
  - if [[ ${TITLE} = *GCC* ]]; then CXX=g++-7; else CXX=clang++${ClangVer}; fi
  - echo "==================== ${TITLE} ====================="
  - echo "==================== ${CXX} ====================="
  # Install stuff specifically for MacOS
  #- if [ $TRAVIS_OS_NAME = osx ]; then brew update; rm '/usr/local/include/c++'; brew install gcc; fi
  # - if [ $TRAVIS_OS_NAME = linux ]; then source .ci/setup_linux.sh; fi


install:

before_script:

script:
  - pwd
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release -Ddompi=OFF -Dexamples=OFF -Dopenmp=OFF
  - make VERBOSE=1
  - ctest -T test --output-on-failure -V

after_success:


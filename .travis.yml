language: cpp
sudo: required
dist: trusty

# The apt packages below are needed but can no longer be installed with
# sudo apt-get.

      # - libcfitsio3-dev # version 3.34
      # - libccfits-dev # version 2.4
      # - libyaml-cpp-dev # version 0.5.1
      # libtiff is version 5 in Trusty

env:
  global:
    - BUILD_CMD='make VERBOSE=1'
    - TEST_CMD='ctest -T test --output-on-failure -V'
    - OMP_NUM_THREADS=4
# env:
#     global:
#         - SETUP_CMD='test'
#         - TEST_CMD='py.test test_env.py'
#         - PYTHON_VERSION=3.6

#     matrix:
#         - SETUP_CMD='egg_info' TEST_CMD='python --version'

matrix:
  # Don't wait for allowed failures - do we really need this? TODO
  fast_finish: true

  include:
    - os: osx
      osx_image: xcode8
      env:
        - TITLE="Who knows - GCC"
        - MPI=OFF
        - openMP=OFF
        - DOCS=OFF

    - os: osx
      osx_image: xcode8
      env:
        - TITLE="Who knows - GCC - OMP"
        - MPI=OFF
        - openMP=ON
        - DOCS=OFF

    - os: osx
      osx_image: xcode8
      env:
        - TITLE="Who knows - GCC - MPI"
        - MPI=ON
        - openMP=ON
        - DOCS=OFF
        - CMAKE_CMD_EXTRA="-DMPIEXEC:FILEPATH=$(which mpirun) -DMPIEXEC_MAX_NUMPROCS=4"

    - os: osx
      osx_image: xcode8
      env:
        - TITLE="Who knows - Clang"
        - MPI=OFF
        - openMP=OFF
        - DOCS=OFF

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libfftw3-dev # version 3.3.3
            - libtiff5-dev # version 5 ?
            - libboost-all-dev # version 1.54
            - libeigen3-dev # version 3.2.0
            #- llvm # version 3.4

      env:
        - TITLE="All dependencies - GCC"
        - DEBUG=True
        - LDFLAGS='-pthread'
        - MPI=OFF
        - openMP=OFF
        - DOCS=OFF

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libfftw3-dev # version 3.3.3
            - libtiff5-dev # version 5 ?
            - libboost-all-dev # version 1.54
            - libeigen3-dev # version 3.2.0
            - libgomp1 # version 4.8.4-2

      env:
        - TITLE="All dependencies - GCC - OMP"
        - DEBUG=True
        - LDFLAGS='-pthread'
        - MPI=OFF
        - openMP=ON
        - DOCS=OFF

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libfftw3-dev # version 3.3.3
            - libtiff5-dev # version 5 ?
            - libboost-all-dev # version 1.54
            - libeigen3-dev # version 3.2.0
            - libgomp1 # version 4.8.4-2
            - openmpi-bin # Version 1.6.5-8

      env:
        - TITLE="All dependencies - GCC - MPI"
        - DEBUG=True
        - LDFLAGS='-pthread'
        - MPI=ON
        - openMP=ON
        - DOCS=OFF
        - CMAKE_CMD_EXTRA="-DMPIEXEC:FILEPATH=$(which mpirun) -DMPIEXEC_MAX_NUMPROCS=4"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libfftw3-dev # version 3.3.3
            - libtiff5-dev # version 5 ?
            - libboost-all-dev # version 1.54
            - libeigen3-dev # version 3.2.0
            - libgomp1 # version 4.8.4-2
            - mpich # version 3.0.4-6

      env:
        - TITLE="All dependencies - GCC - MPI - mpich"
        - DEBUG=True
        - LDFLAGS='-pthread'
        - MPI=ON
        - openMP=ON
        - DOCS=OFF
        - CMAKE_CMD_EXTRA="-DMPIEXEC:FILEPATH=$(which mpirun) -DMPIEXEC_MAX_NUMPROCS=4"


    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libfftw3-dev # version 3.3.3
            - libtiff5-dev # version 5 ?
            - libboost-all-dev # version 1.54
            - libeigen3-dev # version 3.2.0
            #- llvm # version 3.4

      env:
        - TITLE="All dependencies - Clang"
        - DEBUG=True
        - LDFLAGS='-pthread'
        - MPI=OFF
        - openMP=OFF
        - DOCS=OFF

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libtiff5-dev # version 5 ?
            - libgomp1 # version 4.8.4-2
            - openmpi-bin # Version 1.6.5-8

      env:
        - TITLE="No dependencies - GCC - MPI"
        - DEBUG=True
        - LDFLAGS='-pthread'
        - MPI=ON
        - openMP=ON
        - DOCS=OFF
        - CMAKE_CMD_EXTRA="-DMPIEXEC:FILEPATH=$(which mpirun) -DMPIEXEC_MAX_NUMPROCS=4"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libtiff5-dev # version 5 ?
            - libgomp1 # version 4.8.4-2
            - openmpi-bin # Version 1.6.5-8

      env:
        - TITLE="Benchmark (no deps) - GCC - MPI"
        - DEBUG=True
        - LDFLAGS='-pthread'
        - MPI=ON
        - openMP=ON
        - DOCS=OFF
        - CMAKE_CMD_EXTRA="-DMPIEXEC:FILEPATH=$(which mpirun) -DMPIEXEC_MAX_NUMPROCS=4 -Dbenchmarks=ON"
        - TEST_CMD='cd cpp/benchmarks; ./wavelets; ./conjugate_gradient; ./l1_proximal'

  #   - os: linux #Documentation? To push to gh-pages
  #     env: PYTHON_VERSION=3.4 PYTEST_VERSION=3.1 PIP_FALLBACK=false
      
  #allow_failures:
  #   - os: linux #Benchmark
  #     env: PYTHON_VERSION=3.4 PYTEST_VERSION=3.1 PIP_FALLBACK=false
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-7
            - libfftw3-dev # version 3.3.3
            - libtiff5-dev # version 5 ?
            - libboost-all-dev # version 1.54
            - libeigen3-dev # version 3.2.0
            - doxygen # version 1.8.6-2
            - graphviz # version 2.36.0

      env:
        - TITLE="Documentation - GCC"
        - DEBUG=True
        - LDFLAGS='-pthread'
        - MPI=OFF
        - openMP=OFF
        - DOCS=ON
        - BUILD_CMD='make doc VERBOSE=1'
        - TEST_CMD=''

before_install:
  - echo "Travis Run!"
  - if [ $TRAVIS_OS_NAME = osx ]; then brew update; brew install gcc@7 open-mpi; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then ClangVer="-5.0"; fi
  - if [[ ${TITLE} = *GCC* ]]; then CC=gcc-7; else CC=clang${ClangVer}; fi
  - if [[ ${TITLE} = *GCC* ]]; then CXX=g++-7; else CXX=clang++${ClangVer}; fi
  # As MPI is not installed already, this variable is not set properly
  - if [[ $TRAVIS_OS_NAME = osx && $MPI = ON ]]; then export CMAKE_CMD_EXTRA="-DMPIEXEC:FILEPATH=$(which mpirun) -DMPIEXEC_MAX_NUMPROCS=4"; fi
  - echo "==================== ${TITLE} ====================="
  - if [[ $TRAVIS_OS_NAME = osx && $MPI = ON ]]; then echo "==================== ${CMAKE_CMD_EXTRA} ====================="; fi

  # Install stuff specifically for MacOS
  #- if [ $TRAVIS_OS_NAME = osx ]; then brew update; rm '/usr/local/include/c++'; brew install gcc; fi
  # - if [ $TRAVIS_OS_NAME = linux ]; then source .ci/setup_linux.sh; fi


install:

before_script:

script:
  - pwd
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release -Ddompi=${MPI} -Dexamples=OFF -Dopenmp=${openMP} -Ddocs=${DOCS} ${CMAKE_CMD_EXTRA}
  - eval $BUILD_CMD
  - eval $TEST_CMD

after_success:

